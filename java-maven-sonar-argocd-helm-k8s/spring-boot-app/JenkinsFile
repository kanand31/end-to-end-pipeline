pipeline {
    agent any 
    tools {
        maven 'maven'
    }
    options {
<<<<<<< HEAD
        timeout(time: 30, unit: 'MINUTES') 
    }
    environment {
        imageName = "firstproject"
        registry = "387732497979.dkr.ecr.ap-south-1.amazonaws.com/end-to-end-pipeline"
        dockerImage = ''

    }

=======
        timeout(time: 20, unit: 'MINUTES') 
    }
>>>>>>> 9ce9cd0f53b051a7ebc38048147ba80849eefbbb
    stages {
        stage("fetching source code") {
            steps {
                git url: 'https://github.com/kanand31/end-to-end-pipeline.git', branch: 'main'
            }
        }
        stage("build and test") {
            steps {
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage('Building image') {

            steps{

                script {

                     dockerImage = docker.build imageName
        }

      }
    }
        stage('Uploading to ECR') {
            steps{  
               script {
                   docker.withRegistry( 'https://'+registry, 'ecr-login' )   {
                   dockerImage.push("${env.BUILD_NUMBER}")
          }
        }
      }
    }
    
}
